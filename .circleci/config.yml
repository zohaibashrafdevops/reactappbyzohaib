# Javascript Node CircleCI 2.0 configuration file
version: 2
orbs:
  aws-s3: circleci/aws-s3@3.0
jobs:
  build:
    docker:
      - image: circleci/node:13.14.0
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build the application
          command: npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - package.json
            - node_modules
            - src
            - build
  deploy-test:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          #Get all pre-requisites
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install --upgrade \
              awscli==1.14.37
            # Login to ecr and docker login
            aws_login=`aws ecr get-login --no-include-email --region us-east-1`
            eval $aws_login
            aws s3 sync build/ s3://zohaibcircleci
  deploy-production:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          #Get all pre-requisites
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              awscli==1.14.37
            # Login to ecr and docker login
            # aws_login=`docker login`
            # eval $aws_login
            # aws s3 sync build/ s3://circleci
            - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: ${AWS_ACCESS_KEY_ID}
          aws-region: us-east-1
          aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY}
          from: build/
          to: 's3://zohaibcircleci'

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - deploy-test:
          context: AWS
          requires:
            - build
          filters:
            branches:
              only:
                - test
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only:
                - master