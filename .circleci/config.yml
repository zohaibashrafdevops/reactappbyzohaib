# Javascript Node CircleCI 2.0 configuration file
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:13.14.0
    working_directory: ~/ZOHAIB-APP
    steps:
      - checkout
      - run:
          name: show current branch 
          command: echo ${CURRENT_BRANCH}
      - restore_cache:
          key: 
            - app-{{ checksum "package.json" }}
            - app
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build the application
          command: npm run build  
  deploy-to-aws-s3:
    docker:
      - image: circle/node
    steps:
      - checkout
      - run:
          name: show current branch 
          command: echo ${CURRENT_BRANCH}
      - run:
          name: installing aws cli 
          working_directory: /
          command: |
          sudo apt-get -y -qq update
          sudo apt-get install -y awscli
          sudo apt-get install -y python-pip python-dev build-essential
      - run:
          name: build project
          command: |
          npm install
          npm run build
          cd build
          zip ../build.zip -r * .[^.]*
          echo "Build successful"
      - run: 
          name: deploy to aws s3 
          command: |
          if ["${CURRENT_BRANCH}"=="master" ]
          then 
              aws --region us-east-1 s3 sync ~/ZOHAIB-APP/build s3://zohaibcircleci --delete
  deploy-to-aws-cloudfront:
    docker:
      - image: circle/node
    steps:
      - checkout
      - run:
          name: show current branch 
          command: echo ${CURRENT_BRANCH}
      - run:
          name: installing aws cli 
          working_directory: /
          command: |
          sudo apt-get -y -qq update
          sudo apt-get install -y awscli
          sudo apt-get install -y python-pip python-dev build-essential
      - run:
          name: build project
          command: |
          npm install
          npm run build
          cd build
          zip ../build.zip -r * .[^.]*
          echo "Build successful"
      - run: 
          name: deploy to aws s3 
          command: |
          if ["${CURRENT_BRANCH}"=="master" ]
          then 
            aws cloudfront create-invalidation --ditribution-id E3RHK0NT6RVDM7 --paths/\*
workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
         requires:
          - build
         filters:
           branches:
             only: 
               - master
workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
         requires:
          - build
         filters:
           branches:
             only: 
               - master
 

 